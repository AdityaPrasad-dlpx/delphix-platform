#!/bin/bash
#
# Copyright 2018 Delphix
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -o pipefail

SOURCE_DIRECTORY="$(readlink -f "${BASH_SOURCE%/*}")"
DLPX_ANSIBLE_DIRECTORY="${DLPX_ANSIBLE_DIRECTORY:-$SOURCE_DIRECTORY}"

function find_playbooks() {
	if ! find "$DLPX_ANSIBLE_DIRECTORY" \
		-maxdepth 2 \
		-mindepth 2 \
		-name playbook.yml | sort -n; then
		echo "Failure when finding playbooks." 2>&1
		exit 1
	fi
}

function apply_playbook() {
	if ! ansible-playbook -vvv \
		-c "$DLPX_ANSIBLE_CONNECTION" \
		-i "$DLPX_ANSIBLE_INVENTORY" \
		"$1"; then
		echo "Failure when applying playbook." 2>&1
		exit 1
	fi
}

if [[ -z "$DLPX_ANSIBLE_DIRECTORY" ]]; then
	echo "DLPX_ANSIBLE_DIRECTORY is unset." >&2
	exit 1
fi

if [[ -z "$DLPX_ANSIBLE_CONNECTION" ]]; then
	echo "DLPX_ANSIBLE_CONNECTION is unset." >&2
	exit 1
fi

if [[ -z "$DLPX_ANSIBLE_INVENTORY" ]]; then
	echo "DLPX_ANSIBLE_INVENTORY is unset." >&2
	exit 1
fi

if [[ "$(find_playbooks | wc -l)" -eq "0" ]]; then
	echo "No playbooks found in '$DLPX_ANSIBLE_DIRECTORY'." >&2
	exit 1
fi

find_playbooks | while read -r playbook; do
	apply_playbook "$playbook"
done
